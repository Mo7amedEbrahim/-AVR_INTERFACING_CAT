
DIO_LEDS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000071a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         0000099c  00000000  00000000  00000770  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      0000098c  00000000  00000000  0000110c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 1e 03 	call	0x63c	; 0x63c <main>
  64:	0c 94 8b 03 	jmp	0x716	; 0x716 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_voidSetPinDirection>:
#include "DIO_interface.h"




void DIO_voidSetPinDirection(u8 Port,u8 Pin, u8 Direction){
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <DIO_voidSetPinDirection+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <DIO_voidSetPinDirection+0x8>
  74:	0f 92       	push	r0
  76:	cd b7       	in	r28, 0x3d	; 61
  78:	de b7       	in	r29, 0x3e	; 62
  7a:	89 83       	std	Y+1, r24	; 0x01
  7c:	6a 83       	std	Y+2, r22	; 0x02
  7e:	4b 83       	std	Y+3, r20	; 0x03
	switch(Port){
  80:	89 81       	ldd	r24, Y+1	; 0x01
  82:	28 2f       	mov	r18, r24
  84:	30 e0       	ldi	r19, 0x00	; 0
  86:	3d 83       	std	Y+5, r19	; 0x05
  88:	2c 83       	std	Y+4, r18	; 0x04
  8a:	8c 81       	ldd	r24, Y+4	; 0x04
  8c:	9d 81       	ldd	r25, Y+5	; 0x05
  8e:	81 30       	cpi	r24, 0x01	; 1
  90:	91 05       	cpc	r25, r1
  92:	09 f4       	brne	.+2      	; 0x96 <DIO_voidSetPinDirection+0x2a>
  94:	47 c0       	rjmp	.+142    	; 0x124 <DIO_voidSetPinDirection+0xb8>
  96:	2c 81       	ldd	r18, Y+4	; 0x04
  98:	3d 81       	ldd	r19, Y+5	; 0x05
  9a:	22 30       	cpi	r18, 0x02	; 2
  9c:	31 05       	cpc	r19, r1
  9e:	2c f4       	brge	.+10     	; 0xaa <DIO_voidSetPinDirection+0x3e>
  a0:	8c 81       	ldd	r24, Y+4	; 0x04
  a2:	9d 81       	ldd	r25, Y+5	; 0x05
  a4:	00 97       	sbiw	r24, 0x00	; 0
  a6:	71 f0       	breq	.+28     	; 0xc4 <DIO_voidSetPinDirection+0x58>
  a8:	cb c0       	rjmp	.+406    	; 0x240 <DIO_voidSetPinDirection+0x1d4>
  aa:	2c 81       	ldd	r18, Y+4	; 0x04
  ac:	3d 81       	ldd	r19, Y+5	; 0x05
  ae:	22 30       	cpi	r18, 0x02	; 2
  b0:	31 05       	cpc	r19, r1
  b2:	09 f4       	brne	.+2      	; 0xb6 <DIO_voidSetPinDirection+0x4a>
  b4:	67 c0       	rjmp	.+206    	; 0x184 <DIO_voidSetPinDirection+0x118>
  b6:	8c 81       	ldd	r24, Y+4	; 0x04
  b8:	9d 81       	ldd	r25, Y+5	; 0x05
  ba:	83 30       	cpi	r24, 0x03	; 3
  bc:	91 05       	cpc	r25, r1
  be:	09 f4       	brne	.+2      	; 0xc2 <DIO_voidSetPinDirection+0x56>
  c0:	91 c0       	rjmp	.+290    	; 0x1e4 <DIO_voidSetPinDirection+0x178>
  c2:	be c0       	rjmp	.+380    	; 0x240 <DIO_voidSetPinDirection+0x1d4>
		case PORTA:
		if(Direction == INPUT){
  c4:	8b 81       	ldd	r24, Y+3	; 0x03
  c6:	88 23       	and	r24, r24
  c8:	a9 f4       	brne	.+42     	; 0xf4 <DIO_voidSetPinDirection+0x88>
			CLR_BIT(DDRA_REG,Pin);
  ca:	aa e3       	ldi	r26, 0x3A	; 58
  cc:	b0 e0       	ldi	r27, 0x00	; 0
  ce:	ea e3       	ldi	r30, 0x3A	; 58
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	80 81       	ld	r24, Z
  d4:	48 2f       	mov	r20, r24
  d6:	8a 81       	ldd	r24, Y+2	; 0x02
  d8:	28 2f       	mov	r18, r24
  da:	30 e0       	ldi	r19, 0x00	; 0
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	02 2e       	mov	r0, r18
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <DIO_voidSetPinDirection+0x7c>
  e4:	88 0f       	add	r24, r24
  e6:	99 1f       	adc	r25, r25
  e8:	0a 94       	dec	r0
  ea:	e2 f7       	brpl	.-8      	; 0xe4 <DIO_voidSetPinDirection+0x78>
  ec:	80 95       	com	r24
  ee:	84 23       	and	r24, r20
  f0:	8c 93       	st	X, r24
  f2:	a6 c0       	rjmp	.+332    	; 0x240 <DIO_voidSetPinDirection+0x1d4>
		}
		else if(Direction == OUTPUT){
  f4:	8b 81       	ldd	r24, Y+3	; 0x03
  f6:	81 30       	cpi	r24, 0x01	; 1
  f8:	09 f0       	breq	.+2      	; 0xfc <DIO_voidSetPinDirection+0x90>
  fa:	a2 c0       	rjmp	.+324    	; 0x240 <DIO_voidSetPinDirection+0x1d4>
			SET_BIT(DDRA_REG,Pin);
  fc:	aa e3       	ldi	r26, 0x3A	; 58
  fe:	b0 e0       	ldi	r27, 0x00	; 0
 100:	ea e3       	ldi	r30, 0x3A	; 58
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	48 2f       	mov	r20, r24
 108:	8a 81       	ldd	r24, Y+2	; 0x02
 10a:	28 2f       	mov	r18, r24
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	02 2e       	mov	r0, r18
 114:	02 c0       	rjmp	.+4      	; 0x11a <DIO_voidSetPinDirection+0xae>
 116:	88 0f       	add	r24, r24
 118:	99 1f       	adc	r25, r25
 11a:	0a 94       	dec	r0
 11c:	e2 f7       	brpl	.-8      	; 0x116 <DIO_voidSetPinDirection+0xaa>
 11e:	84 2b       	or	r24, r20
 120:	8c 93       	st	X, r24
 122:	8e c0       	rjmp	.+284    	; 0x240 <DIO_voidSetPinDirection+0x1d4>
		}
		break;
		case PORTB:
		if(Direction == INPUT){
 124:	8b 81       	ldd	r24, Y+3	; 0x03
 126:	88 23       	and	r24, r24
 128:	a9 f4       	brne	.+42     	; 0x154 <DIO_voidSetPinDirection+0xe8>
			CLR_BIT(DDRB_REG,Pin);
 12a:	a7 e3       	ldi	r26, 0x37	; 55
 12c:	b0 e0       	ldi	r27, 0x00	; 0
 12e:	e7 e3       	ldi	r30, 0x37	; 55
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	80 81       	ld	r24, Z
 134:	48 2f       	mov	r20, r24
 136:	8a 81       	ldd	r24, Y+2	; 0x02
 138:	28 2f       	mov	r18, r24
 13a:	30 e0       	ldi	r19, 0x00	; 0
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	02 2e       	mov	r0, r18
 142:	02 c0       	rjmp	.+4      	; 0x148 <DIO_voidSetPinDirection+0xdc>
 144:	88 0f       	add	r24, r24
 146:	99 1f       	adc	r25, r25
 148:	0a 94       	dec	r0
 14a:	e2 f7       	brpl	.-8      	; 0x144 <DIO_voidSetPinDirection+0xd8>
 14c:	80 95       	com	r24
 14e:	84 23       	and	r24, r20
 150:	8c 93       	st	X, r24
 152:	76 c0       	rjmp	.+236    	; 0x240 <DIO_voidSetPinDirection+0x1d4>
		}
		else if(Direction == OUTPUT){
 154:	8b 81       	ldd	r24, Y+3	; 0x03
 156:	81 30       	cpi	r24, 0x01	; 1
 158:	09 f0       	breq	.+2      	; 0x15c <DIO_voidSetPinDirection+0xf0>
 15a:	72 c0       	rjmp	.+228    	; 0x240 <DIO_voidSetPinDirection+0x1d4>
			SET_BIT(DDRB_REG,Pin);
 15c:	a7 e3       	ldi	r26, 0x37	; 55
 15e:	b0 e0       	ldi	r27, 0x00	; 0
 160:	e7 e3       	ldi	r30, 0x37	; 55
 162:	f0 e0       	ldi	r31, 0x00	; 0
 164:	80 81       	ld	r24, Z
 166:	48 2f       	mov	r20, r24
 168:	8a 81       	ldd	r24, Y+2	; 0x02
 16a:	28 2f       	mov	r18, r24
 16c:	30 e0       	ldi	r19, 0x00	; 0
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	02 2e       	mov	r0, r18
 174:	02 c0       	rjmp	.+4      	; 0x17a <DIO_voidSetPinDirection+0x10e>
 176:	88 0f       	add	r24, r24
 178:	99 1f       	adc	r25, r25
 17a:	0a 94       	dec	r0
 17c:	e2 f7       	brpl	.-8      	; 0x176 <DIO_voidSetPinDirection+0x10a>
 17e:	84 2b       	or	r24, r20
 180:	8c 93       	st	X, r24
 182:	5e c0       	rjmp	.+188    	; 0x240 <DIO_voidSetPinDirection+0x1d4>
		}
		break;
		case PORTC:
		if(Direction == INPUT){
 184:	8b 81       	ldd	r24, Y+3	; 0x03
 186:	88 23       	and	r24, r24
 188:	a9 f4       	brne	.+42     	; 0x1b4 <DIO_voidSetPinDirection+0x148>
			CLR_BIT(DDRC_REG,Pin);
 18a:	a4 e3       	ldi	r26, 0x34	; 52
 18c:	b0 e0       	ldi	r27, 0x00	; 0
 18e:	e4 e3       	ldi	r30, 0x34	; 52
 190:	f0 e0       	ldi	r31, 0x00	; 0
 192:	80 81       	ld	r24, Z
 194:	48 2f       	mov	r20, r24
 196:	8a 81       	ldd	r24, Y+2	; 0x02
 198:	28 2f       	mov	r18, r24
 19a:	30 e0       	ldi	r19, 0x00	; 0
 19c:	81 e0       	ldi	r24, 0x01	; 1
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	02 2e       	mov	r0, r18
 1a2:	02 c0       	rjmp	.+4      	; 0x1a8 <DIO_voidSetPinDirection+0x13c>
 1a4:	88 0f       	add	r24, r24
 1a6:	99 1f       	adc	r25, r25
 1a8:	0a 94       	dec	r0
 1aa:	e2 f7       	brpl	.-8      	; 0x1a4 <DIO_voidSetPinDirection+0x138>
 1ac:	80 95       	com	r24
 1ae:	84 23       	and	r24, r20
 1b0:	8c 93       	st	X, r24
 1b2:	46 c0       	rjmp	.+140    	; 0x240 <DIO_voidSetPinDirection+0x1d4>
		}
		else if(Direction == OUTPUT){
 1b4:	8b 81       	ldd	r24, Y+3	; 0x03
 1b6:	81 30       	cpi	r24, 0x01	; 1
 1b8:	09 f0       	breq	.+2      	; 0x1bc <DIO_voidSetPinDirection+0x150>
 1ba:	42 c0       	rjmp	.+132    	; 0x240 <DIO_voidSetPinDirection+0x1d4>
			SET_BIT(DDRC_REG,Pin);
 1bc:	a4 e3       	ldi	r26, 0x34	; 52
 1be:	b0 e0       	ldi	r27, 0x00	; 0
 1c0:	e4 e3       	ldi	r30, 0x34	; 52
 1c2:	f0 e0       	ldi	r31, 0x00	; 0
 1c4:	80 81       	ld	r24, Z
 1c6:	48 2f       	mov	r20, r24
 1c8:	8a 81       	ldd	r24, Y+2	; 0x02
 1ca:	28 2f       	mov	r18, r24
 1cc:	30 e0       	ldi	r19, 0x00	; 0
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	02 2e       	mov	r0, r18
 1d4:	02 c0       	rjmp	.+4      	; 0x1da <DIO_voidSetPinDirection+0x16e>
 1d6:	88 0f       	add	r24, r24
 1d8:	99 1f       	adc	r25, r25
 1da:	0a 94       	dec	r0
 1dc:	e2 f7       	brpl	.-8      	; 0x1d6 <DIO_voidSetPinDirection+0x16a>
 1de:	84 2b       	or	r24, r20
 1e0:	8c 93       	st	X, r24
 1e2:	2e c0       	rjmp	.+92     	; 0x240 <DIO_voidSetPinDirection+0x1d4>
		}
		break;
		case PORTD:
		if(Direction == INPUT){
 1e4:	8b 81       	ldd	r24, Y+3	; 0x03
 1e6:	88 23       	and	r24, r24
 1e8:	a9 f4       	brne	.+42     	; 0x214 <DIO_voidSetPinDirection+0x1a8>
			CLR_BIT(DDRD_REG,Pin);
 1ea:	a1 e3       	ldi	r26, 0x31	; 49
 1ec:	b0 e0       	ldi	r27, 0x00	; 0
 1ee:	e1 e3       	ldi	r30, 0x31	; 49
 1f0:	f0 e0       	ldi	r31, 0x00	; 0
 1f2:	80 81       	ld	r24, Z
 1f4:	48 2f       	mov	r20, r24
 1f6:	8a 81       	ldd	r24, Y+2	; 0x02
 1f8:	28 2f       	mov	r18, r24
 1fa:	30 e0       	ldi	r19, 0x00	; 0
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	02 2e       	mov	r0, r18
 202:	02 c0       	rjmp	.+4      	; 0x208 <DIO_voidSetPinDirection+0x19c>
 204:	88 0f       	add	r24, r24
 206:	99 1f       	adc	r25, r25
 208:	0a 94       	dec	r0
 20a:	e2 f7       	brpl	.-8      	; 0x204 <DIO_voidSetPinDirection+0x198>
 20c:	80 95       	com	r24
 20e:	84 23       	and	r24, r20
 210:	8c 93       	st	X, r24
 212:	16 c0       	rjmp	.+44     	; 0x240 <DIO_voidSetPinDirection+0x1d4>
		}
		else if(Direction == OUTPUT){
 214:	8b 81       	ldd	r24, Y+3	; 0x03
 216:	81 30       	cpi	r24, 0x01	; 1
 218:	99 f4       	brne	.+38     	; 0x240 <DIO_voidSetPinDirection+0x1d4>
			SET_BIT(DDRD_REG,Pin);
 21a:	a1 e3       	ldi	r26, 0x31	; 49
 21c:	b0 e0       	ldi	r27, 0x00	; 0
 21e:	e1 e3       	ldi	r30, 0x31	; 49
 220:	f0 e0       	ldi	r31, 0x00	; 0
 222:	80 81       	ld	r24, Z
 224:	48 2f       	mov	r20, r24
 226:	8a 81       	ldd	r24, Y+2	; 0x02
 228:	28 2f       	mov	r18, r24
 22a:	30 e0       	ldi	r19, 0x00	; 0
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	02 2e       	mov	r0, r18
 232:	02 c0       	rjmp	.+4      	; 0x238 <DIO_voidSetPinDirection+0x1cc>
 234:	88 0f       	add	r24, r24
 236:	99 1f       	adc	r25, r25
 238:	0a 94       	dec	r0
 23a:	e2 f7       	brpl	.-8      	; 0x234 <DIO_voidSetPinDirection+0x1c8>
 23c:	84 2b       	or	r24, r20
 23e:	8c 93       	st	X, r24
		}
		break;
	}
}
 240:	0f 90       	pop	r0
 242:	0f 90       	pop	r0
 244:	0f 90       	pop	r0
 246:	0f 90       	pop	r0
 248:	0f 90       	pop	r0
 24a:	cf 91       	pop	r28
 24c:	df 91       	pop	r29
 24e:	08 95       	ret

00000250 <DIO_voidSetPortDirection>:



void DIO_voidSetPortDirection(u8 Port,u8 Direction){
 250:	df 93       	push	r29
 252:	cf 93       	push	r28
 254:	00 d0       	rcall	.+0      	; 0x256 <DIO_voidSetPortDirection+0x6>
 256:	00 d0       	rcall	.+0      	; 0x258 <DIO_voidSetPortDirection+0x8>
 258:	cd b7       	in	r28, 0x3d	; 61
 25a:	de b7       	in	r29, 0x3e	; 62
 25c:	89 83       	std	Y+1, r24	; 0x01
 25e:	6a 83       	std	Y+2, r22	; 0x02
	switch(Port){
 260:	89 81       	ldd	r24, Y+1	; 0x01
 262:	28 2f       	mov	r18, r24
 264:	30 e0       	ldi	r19, 0x00	; 0
 266:	3c 83       	std	Y+4, r19	; 0x04
 268:	2b 83       	std	Y+3, r18	; 0x03
 26a:	8b 81       	ldd	r24, Y+3	; 0x03
 26c:	9c 81       	ldd	r25, Y+4	; 0x04
 26e:	81 30       	cpi	r24, 0x01	; 1
 270:	91 05       	cpc	r25, r1
 272:	d1 f0       	breq	.+52     	; 0x2a8 <DIO_voidSetPortDirection+0x58>
 274:	2b 81       	ldd	r18, Y+3	; 0x03
 276:	3c 81       	ldd	r19, Y+4	; 0x04
 278:	22 30       	cpi	r18, 0x02	; 2
 27a:	31 05       	cpc	r19, r1
 27c:	2c f4       	brge	.+10     	; 0x288 <DIO_voidSetPortDirection+0x38>
 27e:	8b 81       	ldd	r24, Y+3	; 0x03
 280:	9c 81       	ldd	r25, Y+4	; 0x04
 282:	00 97       	sbiw	r24, 0x00	; 0
 284:	61 f0       	breq	.+24     	; 0x29e <DIO_voidSetPortDirection+0x4e>
 286:	1e c0       	rjmp	.+60     	; 0x2c4 <DIO_voidSetPortDirection+0x74>
 288:	2b 81       	ldd	r18, Y+3	; 0x03
 28a:	3c 81       	ldd	r19, Y+4	; 0x04
 28c:	22 30       	cpi	r18, 0x02	; 2
 28e:	31 05       	cpc	r19, r1
 290:	81 f0       	breq	.+32     	; 0x2b2 <DIO_voidSetPortDirection+0x62>
 292:	8b 81       	ldd	r24, Y+3	; 0x03
 294:	9c 81       	ldd	r25, Y+4	; 0x04
 296:	83 30       	cpi	r24, 0x03	; 3
 298:	91 05       	cpc	r25, r1
 29a:	81 f0       	breq	.+32     	; 0x2bc <DIO_voidSetPortDirection+0x6c>
 29c:	13 c0       	rjmp	.+38     	; 0x2c4 <DIO_voidSetPortDirection+0x74>
		case PORTA: DDRA_REG = Direction; break;
 29e:	ea e3       	ldi	r30, 0x3A	; 58
 2a0:	f0 e0       	ldi	r31, 0x00	; 0
 2a2:	8a 81       	ldd	r24, Y+2	; 0x02
 2a4:	80 83       	st	Z, r24
 2a6:	0e c0       	rjmp	.+28     	; 0x2c4 <DIO_voidSetPortDirection+0x74>
		case PORTB: DDRB_REG = Direction;break;
 2a8:	e7 e3       	ldi	r30, 0x37	; 55
 2aa:	f0 e0       	ldi	r31, 0x00	; 0
 2ac:	8a 81       	ldd	r24, Y+2	; 0x02
 2ae:	80 83       	st	Z, r24
 2b0:	09 c0       	rjmp	.+18     	; 0x2c4 <DIO_voidSetPortDirection+0x74>
		case PORTC: DDRC_REG = Direction; break;
 2b2:	e4 e3       	ldi	r30, 0x34	; 52
 2b4:	f0 e0       	ldi	r31, 0x00	; 0
 2b6:	8a 81       	ldd	r24, Y+2	; 0x02
 2b8:	80 83       	st	Z, r24
 2ba:	04 c0       	rjmp	.+8      	; 0x2c4 <DIO_voidSetPortDirection+0x74>
		case PORTD: DDRD_REG = Direction; break;
 2bc:	e1 e3       	ldi	r30, 0x31	; 49
 2be:	f0 e0       	ldi	r31, 0x00	; 0
 2c0:	8a 81       	ldd	r24, Y+2	; 0x02
 2c2:	80 83       	st	Z, r24
	}
}
 2c4:	0f 90       	pop	r0
 2c6:	0f 90       	pop	r0
 2c8:	0f 90       	pop	r0
 2ca:	0f 90       	pop	r0
 2cc:	cf 91       	pop	r28
 2ce:	df 91       	pop	r29
 2d0:	08 95       	ret

000002d2 <DIO_voidSetPinValue>:


void DIO_voidSetPinValue(u8 Port,u8 Pin, u8 Value){
 2d2:	df 93       	push	r29
 2d4:	cf 93       	push	r28
 2d6:	00 d0       	rcall	.+0      	; 0x2d8 <DIO_voidSetPinValue+0x6>
 2d8:	00 d0       	rcall	.+0      	; 0x2da <DIO_voidSetPinValue+0x8>
 2da:	0f 92       	push	r0
 2dc:	cd b7       	in	r28, 0x3d	; 61
 2de:	de b7       	in	r29, 0x3e	; 62
 2e0:	89 83       	std	Y+1, r24	; 0x01
 2e2:	6a 83       	std	Y+2, r22	; 0x02
 2e4:	4b 83       	std	Y+3, r20	; 0x03
	switch(Port){
 2e6:	89 81       	ldd	r24, Y+1	; 0x01
 2e8:	28 2f       	mov	r18, r24
 2ea:	30 e0       	ldi	r19, 0x00	; 0
 2ec:	3d 83       	std	Y+5, r19	; 0x05
 2ee:	2c 83       	std	Y+4, r18	; 0x04
 2f0:	8c 81       	ldd	r24, Y+4	; 0x04
 2f2:	9d 81       	ldd	r25, Y+5	; 0x05
 2f4:	81 30       	cpi	r24, 0x01	; 1
 2f6:	91 05       	cpc	r25, r1
 2f8:	09 f4       	brne	.+2      	; 0x2fc <DIO_voidSetPinValue+0x2a>
 2fa:	47 c0       	rjmp	.+142    	; 0x38a <DIO_voidSetPinValue+0xb8>
 2fc:	2c 81       	ldd	r18, Y+4	; 0x04
 2fe:	3d 81       	ldd	r19, Y+5	; 0x05
 300:	22 30       	cpi	r18, 0x02	; 2
 302:	31 05       	cpc	r19, r1
 304:	2c f4       	brge	.+10     	; 0x310 <DIO_voidSetPinValue+0x3e>
 306:	8c 81       	ldd	r24, Y+4	; 0x04
 308:	9d 81       	ldd	r25, Y+5	; 0x05
 30a:	00 97       	sbiw	r24, 0x00	; 0
 30c:	71 f0       	breq	.+28     	; 0x32a <DIO_voidSetPinValue+0x58>
 30e:	cb c0       	rjmp	.+406    	; 0x4a6 <DIO_voidSetPinValue+0x1d4>
 310:	2c 81       	ldd	r18, Y+4	; 0x04
 312:	3d 81       	ldd	r19, Y+5	; 0x05
 314:	22 30       	cpi	r18, 0x02	; 2
 316:	31 05       	cpc	r19, r1
 318:	09 f4       	brne	.+2      	; 0x31c <DIO_voidSetPinValue+0x4a>
 31a:	67 c0       	rjmp	.+206    	; 0x3ea <DIO_voidSetPinValue+0x118>
 31c:	8c 81       	ldd	r24, Y+4	; 0x04
 31e:	9d 81       	ldd	r25, Y+5	; 0x05
 320:	83 30       	cpi	r24, 0x03	; 3
 322:	91 05       	cpc	r25, r1
 324:	09 f4       	brne	.+2      	; 0x328 <DIO_voidSetPinValue+0x56>
 326:	91 c0       	rjmp	.+290    	; 0x44a <DIO_voidSetPinValue+0x178>
 328:	be c0       	rjmp	.+380    	; 0x4a6 <DIO_voidSetPinValue+0x1d4>
		case PORTA:
		if(Value == LOW){
 32a:	8b 81       	ldd	r24, Y+3	; 0x03
 32c:	88 23       	and	r24, r24
 32e:	a9 f4       	brne	.+42     	; 0x35a <DIO_voidSetPinValue+0x88>
			CLR_BIT(PORTA_REG,Pin);
 330:	ab e3       	ldi	r26, 0x3B	; 59
 332:	b0 e0       	ldi	r27, 0x00	; 0
 334:	eb e3       	ldi	r30, 0x3B	; 59
 336:	f0 e0       	ldi	r31, 0x00	; 0
 338:	80 81       	ld	r24, Z
 33a:	48 2f       	mov	r20, r24
 33c:	8a 81       	ldd	r24, Y+2	; 0x02
 33e:	28 2f       	mov	r18, r24
 340:	30 e0       	ldi	r19, 0x00	; 0
 342:	81 e0       	ldi	r24, 0x01	; 1
 344:	90 e0       	ldi	r25, 0x00	; 0
 346:	02 2e       	mov	r0, r18
 348:	02 c0       	rjmp	.+4      	; 0x34e <DIO_voidSetPinValue+0x7c>
 34a:	88 0f       	add	r24, r24
 34c:	99 1f       	adc	r25, r25
 34e:	0a 94       	dec	r0
 350:	e2 f7       	brpl	.-8      	; 0x34a <DIO_voidSetPinValue+0x78>
 352:	80 95       	com	r24
 354:	84 23       	and	r24, r20
 356:	8c 93       	st	X, r24
 358:	a6 c0       	rjmp	.+332    	; 0x4a6 <DIO_voidSetPinValue+0x1d4>
		}
		else if(Value == HIGH){
 35a:	8b 81       	ldd	r24, Y+3	; 0x03
 35c:	81 30       	cpi	r24, 0x01	; 1
 35e:	09 f0       	breq	.+2      	; 0x362 <DIO_voidSetPinValue+0x90>
 360:	a2 c0       	rjmp	.+324    	; 0x4a6 <DIO_voidSetPinValue+0x1d4>
			SET_BIT(PORTA_REG,Pin);
 362:	ab e3       	ldi	r26, 0x3B	; 59
 364:	b0 e0       	ldi	r27, 0x00	; 0
 366:	eb e3       	ldi	r30, 0x3B	; 59
 368:	f0 e0       	ldi	r31, 0x00	; 0
 36a:	80 81       	ld	r24, Z
 36c:	48 2f       	mov	r20, r24
 36e:	8a 81       	ldd	r24, Y+2	; 0x02
 370:	28 2f       	mov	r18, r24
 372:	30 e0       	ldi	r19, 0x00	; 0
 374:	81 e0       	ldi	r24, 0x01	; 1
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	02 2e       	mov	r0, r18
 37a:	02 c0       	rjmp	.+4      	; 0x380 <DIO_voidSetPinValue+0xae>
 37c:	88 0f       	add	r24, r24
 37e:	99 1f       	adc	r25, r25
 380:	0a 94       	dec	r0
 382:	e2 f7       	brpl	.-8      	; 0x37c <DIO_voidSetPinValue+0xaa>
 384:	84 2b       	or	r24, r20
 386:	8c 93       	st	X, r24
 388:	8e c0       	rjmp	.+284    	; 0x4a6 <DIO_voidSetPinValue+0x1d4>
		}
		break;
		case PORTB:
		if(Value == LOW){
 38a:	8b 81       	ldd	r24, Y+3	; 0x03
 38c:	88 23       	and	r24, r24
 38e:	a9 f4       	brne	.+42     	; 0x3ba <DIO_voidSetPinValue+0xe8>
			CLR_BIT(PORTB_REG,Pin);
 390:	a8 e3       	ldi	r26, 0x38	; 56
 392:	b0 e0       	ldi	r27, 0x00	; 0
 394:	e8 e3       	ldi	r30, 0x38	; 56
 396:	f0 e0       	ldi	r31, 0x00	; 0
 398:	80 81       	ld	r24, Z
 39a:	48 2f       	mov	r20, r24
 39c:	8a 81       	ldd	r24, Y+2	; 0x02
 39e:	28 2f       	mov	r18, r24
 3a0:	30 e0       	ldi	r19, 0x00	; 0
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	02 2e       	mov	r0, r18
 3a8:	02 c0       	rjmp	.+4      	; 0x3ae <DIO_voidSetPinValue+0xdc>
 3aa:	88 0f       	add	r24, r24
 3ac:	99 1f       	adc	r25, r25
 3ae:	0a 94       	dec	r0
 3b0:	e2 f7       	brpl	.-8      	; 0x3aa <DIO_voidSetPinValue+0xd8>
 3b2:	80 95       	com	r24
 3b4:	84 23       	and	r24, r20
 3b6:	8c 93       	st	X, r24
 3b8:	76 c0       	rjmp	.+236    	; 0x4a6 <DIO_voidSetPinValue+0x1d4>
		}
		else if(Value == HIGH){
 3ba:	8b 81       	ldd	r24, Y+3	; 0x03
 3bc:	81 30       	cpi	r24, 0x01	; 1
 3be:	09 f0       	breq	.+2      	; 0x3c2 <DIO_voidSetPinValue+0xf0>
 3c0:	72 c0       	rjmp	.+228    	; 0x4a6 <DIO_voidSetPinValue+0x1d4>
			SET_BIT(PORTB_REG,Pin);
 3c2:	a8 e3       	ldi	r26, 0x38	; 56
 3c4:	b0 e0       	ldi	r27, 0x00	; 0
 3c6:	e8 e3       	ldi	r30, 0x38	; 56
 3c8:	f0 e0       	ldi	r31, 0x00	; 0
 3ca:	80 81       	ld	r24, Z
 3cc:	48 2f       	mov	r20, r24
 3ce:	8a 81       	ldd	r24, Y+2	; 0x02
 3d0:	28 2f       	mov	r18, r24
 3d2:	30 e0       	ldi	r19, 0x00	; 0
 3d4:	81 e0       	ldi	r24, 0x01	; 1
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	02 2e       	mov	r0, r18
 3da:	02 c0       	rjmp	.+4      	; 0x3e0 <DIO_voidSetPinValue+0x10e>
 3dc:	88 0f       	add	r24, r24
 3de:	99 1f       	adc	r25, r25
 3e0:	0a 94       	dec	r0
 3e2:	e2 f7       	brpl	.-8      	; 0x3dc <DIO_voidSetPinValue+0x10a>
 3e4:	84 2b       	or	r24, r20
 3e6:	8c 93       	st	X, r24
 3e8:	5e c0       	rjmp	.+188    	; 0x4a6 <DIO_voidSetPinValue+0x1d4>
		}
		break;
		case PORTC:
		if(Value == LOW){
 3ea:	8b 81       	ldd	r24, Y+3	; 0x03
 3ec:	88 23       	and	r24, r24
 3ee:	a9 f4       	brne	.+42     	; 0x41a <DIO_voidSetPinValue+0x148>
			CLR_BIT(PORTC_REG,Pin);
 3f0:	a5 e3       	ldi	r26, 0x35	; 53
 3f2:	b0 e0       	ldi	r27, 0x00	; 0
 3f4:	e5 e3       	ldi	r30, 0x35	; 53
 3f6:	f0 e0       	ldi	r31, 0x00	; 0
 3f8:	80 81       	ld	r24, Z
 3fa:	48 2f       	mov	r20, r24
 3fc:	8a 81       	ldd	r24, Y+2	; 0x02
 3fe:	28 2f       	mov	r18, r24
 400:	30 e0       	ldi	r19, 0x00	; 0
 402:	81 e0       	ldi	r24, 0x01	; 1
 404:	90 e0       	ldi	r25, 0x00	; 0
 406:	02 2e       	mov	r0, r18
 408:	02 c0       	rjmp	.+4      	; 0x40e <DIO_voidSetPinValue+0x13c>
 40a:	88 0f       	add	r24, r24
 40c:	99 1f       	adc	r25, r25
 40e:	0a 94       	dec	r0
 410:	e2 f7       	brpl	.-8      	; 0x40a <DIO_voidSetPinValue+0x138>
 412:	80 95       	com	r24
 414:	84 23       	and	r24, r20
 416:	8c 93       	st	X, r24
 418:	46 c0       	rjmp	.+140    	; 0x4a6 <DIO_voidSetPinValue+0x1d4>
		}
		else if(Value == HIGH){
 41a:	8b 81       	ldd	r24, Y+3	; 0x03
 41c:	81 30       	cpi	r24, 0x01	; 1
 41e:	09 f0       	breq	.+2      	; 0x422 <DIO_voidSetPinValue+0x150>
 420:	42 c0       	rjmp	.+132    	; 0x4a6 <DIO_voidSetPinValue+0x1d4>
			SET_BIT(PORTC_REG,Pin);
 422:	a5 e3       	ldi	r26, 0x35	; 53
 424:	b0 e0       	ldi	r27, 0x00	; 0
 426:	e5 e3       	ldi	r30, 0x35	; 53
 428:	f0 e0       	ldi	r31, 0x00	; 0
 42a:	80 81       	ld	r24, Z
 42c:	48 2f       	mov	r20, r24
 42e:	8a 81       	ldd	r24, Y+2	; 0x02
 430:	28 2f       	mov	r18, r24
 432:	30 e0       	ldi	r19, 0x00	; 0
 434:	81 e0       	ldi	r24, 0x01	; 1
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	02 2e       	mov	r0, r18
 43a:	02 c0       	rjmp	.+4      	; 0x440 <DIO_voidSetPinValue+0x16e>
 43c:	88 0f       	add	r24, r24
 43e:	99 1f       	adc	r25, r25
 440:	0a 94       	dec	r0
 442:	e2 f7       	brpl	.-8      	; 0x43c <DIO_voidSetPinValue+0x16a>
 444:	84 2b       	or	r24, r20
 446:	8c 93       	st	X, r24
 448:	2e c0       	rjmp	.+92     	; 0x4a6 <DIO_voidSetPinValue+0x1d4>
		}
		break;
		case PORTD:
		if(Value == LOW){
 44a:	8b 81       	ldd	r24, Y+3	; 0x03
 44c:	88 23       	and	r24, r24
 44e:	a9 f4       	brne	.+42     	; 0x47a <DIO_voidSetPinValue+0x1a8>
			CLR_BIT(PORTD_REG,Pin);
 450:	a2 e3       	ldi	r26, 0x32	; 50
 452:	b0 e0       	ldi	r27, 0x00	; 0
 454:	e2 e3       	ldi	r30, 0x32	; 50
 456:	f0 e0       	ldi	r31, 0x00	; 0
 458:	80 81       	ld	r24, Z
 45a:	48 2f       	mov	r20, r24
 45c:	8a 81       	ldd	r24, Y+2	; 0x02
 45e:	28 2f       	mov	r18, r24
 460:	30 e0       	ldi	r19, 0x00	; 0
 462:	81 e0       	ldi	r24, 0x01	; 1
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	02 2e       	mov	r0, r18
 468:	02 c0       	rjmp	.+4      	; 0x46e <DIO_voidSetPinValue+0x19c>
 46a:	88 0f       	add	r24, r24
 46c:	99 1f       	adc	r25, r25
 46e:	0a 94       	dec	r0
 470:	e2 f7       	brpl	.-8      	; 0x46a <DIO_voidSetPinValue+0x198>
 472:	80 95       	com	r24
 474:	84 23       	and	r24, r20
 476:	8c 93       	st	X, r24
 478:	16 c0       	rjmp	.+44     	; 0x4a6 <DIO_voidSetPinValue+0x1d4>
		}
		else if(Value == HIGH){
 47a:	8b 81       	ldd	r24, Y+3	; 0x03
 47c:	81 30       	cpi	r24, 0x01	; 1
 47e:	99 f4       	brne	.+38     	; 0x4a6 <DIO_voidSetPinValue+0x1d4>
			SET_BIT(PORTD_REG,Pin);
 480:	a2 e3       	ldi	r26, 0x32	; 50
 482:	b0 e0       	ldi	r27, 0x00	; 0
 484:	e2 e3       	ldi	r30, 0x32	; 50
 486:	f0 e0       	ldi	r31, 0x00	; 0
 488:	80 81       	ld	r24, Z
 48a:	48 2f       	mov	r20, r24
 48c:	8a 81       	ldd	r24, Y+2	; 0x02
 48e:	28 2f       	mov	r18, r24
 490:	30 e0       	ldi	r19, 0x00	; 0
 492:	81 e0       	ldi	r24, 0x01	; 1
 494:	90 e0       	ldi	r25, 0x00	; 0
 496:	02 2e       	mov	r0, r18
 498:	02 c0       	rjmp	.+4      	; 0x49e <DIO_voidSetPinValue+0x1cc>
 49a:	88 0f       	add	r24, r24
 49c:	99 1f       	adc	r25, r25
 49e:	0a 94       	dec	r0
 4a0:	e2 f7       	brpl	.-8      	; 0x49a <DIO_voidSetPinValue+0x1c8>
 4a2:	84 2b       	or	r24, r20
 4a4:	8c 93       	st	X, r24
		}
		break;

	}
}
 4a6:	0f 90       	pop	r0
 4a8:	0f 90       	pop	r0
 4aa:	0f 90       	pop	r0
 4ac:	0f 90       	pop	r0
 4ae:	0f 90       	pop	r0
 4b0:	cf 91       	pop	r28
 4b2:	df 91       	pop	r29
 4b4:	08 95       	ret

000004b6 <DIO_voidSetPortValue>:



void DIO_voidSetPortValue(u8 Port,u8 Value){
 4b6:	df 93       	push	r29
 4b8:	cf 93       	push	r28
 4ba:	00 d0       	rcall	.+0      	; 0x4bc <DIO_voidSetPortValue+0x6>
 4bc:	00 d0       	rcall	.+0      	; 0x4be <DIO_voidSetPortValue+0x8>
 4be:	cd b7       	in	r28, 0x3d	; 61
 4c0:	de b7       	in	r29, 0x3e	; 62
 4c2:	89 83       	std	Y+1, r24	; 0x01
 4c4:	6a 83       	std	Y+2, r22	; 0x02
	switch(Port){
 4c6:	89 81       	ldd	r24, Y+1	; 0x01
 4c8:	28 2f       	mov	r18, r24
 4ca:	30 e0       	ldi	r19, 0x00	; 0
 4cc:	3c 83       	std	Y+4, r19	; 0x04
 4ce:	2b 83       	std	Y+3, r18	; 0x03
 4d0:	8b 81       	ldd	r24, Y+3	; 0x03
 4d2:	9c 81       	ldd	r25, Y+4	; 0x04
 4d4:	81 30       	cpi	r24, 0x01	; 1
 4d6:	91 05       	cpc	r25, r1
 4d8:	d1 f0       	breq	.+52     	; 0x50e <DIO_voidSetPortValue+0x58>
 4da:	2b 81       	ldd	r18, Y+3	; 0x03
 4dc:	3c 81       	ldd	r19, Y+4	; 0x04
 4de:	22 30       	cpi	r18, 0x02	; 2
 4e0:	31 05       	cpc	r19, r1
 4e2:	2c f4       	brge	.+10     	; 0x4ee <DIO_voidSetPortValue+0x38>
 4e4:	8b 81       	ldd	r24, Y+3	; 0x03
 4e6:	9c 81       	ldd	r25, Y+4	; 0x04
 4e8:	00 97       	sbiw	r24, 0x00	; 0
 4ea:	61 f0       	breq	.+24     	; 0x504 <DIO_voidSetPortValue+0x4e>
 4ec:	1e c0       	rjmp	.+60     	; 0x52a <DIO_voidSetPortValue+0x74>
 4ee:	2b 81       	ldd	r18, Y+3	; 0x03
 4f0:	3c 81       	ldd	r19, Y+4	; 0x04
 4f2:	22 30       	cpi	r18, 0x02	; 2
 4f4:	31 05       	cpc	r19, r1
 4f6:	81 f0       	breq	.+32     	; 0x518 <DIO_voidSetPortValue+0x62>
 4f8:	8b 81       	ldd	r24, Y+3	; 0x03
 4fa:	9c 81       	ldd	r25, Y+4	; 0x04
 4fc:	83 30       	cpi	r24, 0x03	; 3
 4fe:	91 05       	cpc	r25, r1
 500:	81 f0       	breq	.+32     	; 0x522 <DIO_voidSetPortValue+0x6c>
 502:	13 c0       	rjmp	.+38     	; 0x52a <DIO_voidSetPortValue+0x74>
		case PORTA: PORTA_REG = Value; break;
 504:	eb e3       	ldi	r30, 0x3B	; 59
 506:	f0 e0       	ldi	r31, 0x00	; 0
 508:	8a 81       	ldd	r24, Y+2	; 0x02
 50a:	80 83       	st	Z, r24
 50c:	0e c0       	rjmp	.+28     	; 0x52a <DIO_voidSetPortValue+0x74>
		case PORTB: PORTB_REG = Value; break;
 50e:	e8 e3       	ldi	r30, 0x38	; 56
 510:	f0 e0       	ldi	r31, 0x00	; 0
 512:	8a 81       	ldd	r24, Y+2	; 0x02
 514:	80 83       	st	Z, r24
 516:	09 c0       	rjmp	.+18     	; 0x52a <DIO_voidSetPortValue+0x74>
		case PORTC: PORTC_REG = Value; break;
 518:	e5 e3       	ldi	r30, 0x35	; 53
 51a:	f0 e0       	ldi	r31, 0x00	; 0
 51c:	8a 81       	ldd	r24, Y+2	; 0x02
 51e:	80 83       	st	Z, r24
 520:	04 c0       	rjmp	.+8      	; 0x52a <DIO_voidSetPortValue+0x74>
		case PORTD: PORTD_REG = Value; break;
 522:	e2 e3       	ldi	r30, 0x32	; 50
 524:	f0 e0       	ldi	r31, 0x00	; 0
 526:	8a 81       	ldd	r24, Y+2	; 0x02
 528:	80 83       	st	Z, r24
	}
}
 52a:	0f 90       	pop	r0
 52c:	0f 90       	pop	r0
 52e:	0f 90       	pop	r0
 530:	0f 90       	pop	r0
 532:	cf 91       	pop	r28
 534:	df 91       	pop	r29
 536:	08 95       	ret

00000538 <DIO_u8GetPinValue>:


u8 DIO_u8GetPinValue(u8 Port,u8 Pin){
 538:	df 93       	push	r29
 53a:	cf 93       	push	r28
 53c:	00 d0       	rcall	.+0      	; 0x53e <DIO_u8GetPinValue+0x6>
 53e:	00 d0       	rcall	.+0      	; 0x540 <DIO_u8GetPinValue+0x8>
 540:	00 d0       	rcall	.+0      	; 0x542 <DIO_u8GetPinValue+0xa>
 542:	cd b7       	in	r28, 0x3d	; 61
 544:	de b7       	in	r29, 0x3e	; 62
 546:	89 83       	std	Y+1, r24	; 0x01
 548:	6a 83       	std	Y+2, r22	; 0x02
	switch(Port){
 54a:	89 81       	ldd	r24, Y+1	; 0x01
 54c:	28 2f       	mov	r18, r24
 54e:	30 e0       	ldi	r19, 0x00	; 0
 550:	3d 83       	std	Y+5, r19	; 0x05
 552:	2c 83       	std	Y+4, r18	; 0x04
 554:	4c 81       	ldd	r20, Y+4	; 0x04
 556:	5d 81       	ldd	r21, Y+5	; 0x05
 558:	41 30       	cpi	r20, 0x01	; 1
 55a:	51 05       	cpc	r21, r1
 55c:	49 f1       	breq	.+82     	; 0x5b0 <DIO_u8GetPinValue+0x78>
 55e:	8c 81       	ldd	r24, Y+4	; 0x04
 560:	9d 81       	ldd	r25, Y+5	; 0x05
 562:	82 30       	cpi	r24, 0x02	; 2
 564:	91 05       	cpc	r25, r1
 566:	34 f4       	brge	.+12     	; 0x574 <DIO_u8GetPinValue+0x3c>
 568:	2c 81       	ldd	r18, Y+4	; 0x04
 56a:	3d 81       	ldd	r19, Y+5	; 0x05
 56c:	21 15       	cp	r18, r1
 56e:	31 05       	cpc	r19, r1
 570:	61 f0       	breq	.+24     	; 0x58a <DIO_u8GetPinValue+0x52>
 572:	57 c0       	rjmp	.+174    	; 0x622 <DIO_u8GetPinValue+0xea>
 574:	4c 81       	ldd	r20, Y+4	; 0x04
 576:	5d 81       	ldd	r21, Y+5	; 0x05
 578:	42 30       	cpi	r20, 0x02	; 2
 57a:	51 05       	cpc	r21, r1
 57c:	61 f1       	breq	.+88     	; 0x5d6 <DIO_u8GetPinValue+0x9e>
 57e:	8c 81       	ldd	r24, Y+4	; 0x04
 580:	9d 81       	ldd	r25, Y+5	; 0x05
 582:	83 30       	cpi	r24, 0x03	; 3
 584:	91 05       	cpc	r25, r1
 586:	d1 f1       	breq	.+116    	; 0x5fc <DIO_u8GetPinValue+0xc4>
 588:	4c c0       	rjmp	.+152    	; 0x622 <DIO_u8GetPinValue+0xea>
		case PORTA: return GET_BIT(PINA_REG,Pin); break;
 58a:	e9 e3       	ldi	r30, 0x39	; 57
 58c:	f0 e0       	ldi	r31, 0x00	; 0
 58e:	80 81       	ld	r24, Z
 590:	28 2f       	mov	r18, r24
 592:	30 e0       	ldi	r19, 0x00	; 0
 594:	8a 81       	ldd	r24, Y+2	; 0x02
 596:	88 2f       	mov	r24, r24
 598:	90 e0       	ldi	r25, 0x00	; 0
 59a:	a9 01       	movw	r20, r18
 59c:	02 c0       	rjmp	.+4      	; 0x5a2 <DIO_u8GetPinValue+0x6a>
 59e:	55 95       	asr	r21
 5a0:	47 95       	ror	r20
 5a2:	8a 95       	dec	r24
 5a4:	e2 f7       	brpl	.-8      	; 0x59e <DIO_u8GetPinValue+0x66>
 5a6:	ca 01       	movw	r24, r20
 5a8:	58 2f       	mov	r21, r24
 5aa:	51 70       	andi	r21, 0x01	; 1
 5ac:	5b 83       	std	Y+3, r21	; 0x03
 5ae:	3a c0       	rjmp	.+116    	; 0x624 <DIO_u8GetPinValue+0xec>
		case PORTB: return GET_BIT(PINB_REG,Pin); break;
 5b0:	e6 e3       	ldi	r30, 0x36	; 54
 5b2:	f0 e0       	ldi	r31, 0x00	; 0
 5b4:	80 81       	ld	r24, Z
 5b6:	28 2f       	mov	r18, r24
 5b8:	30 e0       	ldi	r19, 0x00	; 0
 5ba:	8a 81       	ldd	r24, Y+2	; 0x02
 5bc:	88 2f       	mov	r24, r24
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	a9 01       	movw	r20, r18
 5c2:	02 c0       	rjmp	.+4      	; 0x5c8 <DIO_u8GetPinValue+0x90>
 5c4:	55 95       	asr	r21
 5c6:	47 95       	ror	r20
 5c8:	8a 95       	dec	r24
 5ca:	e2 f7       	brpl	.-8      	; 0x5c4 <DIO_u8GetPinValue+0x8c>
 5cc:	ca 01       	movw	r24, r20
 5ce:	58 2f       	mov	r21, r24
 5d0:	51 70       	andi	r21, 0x01	; 1
 5d2:	5b 83       	std	Y+3, r21	; 0x03
 5d4:	27 c0       	rjmp	.+78     	; 0x624 <DIO_u8GetPinValue+0xec>
		case PORTC: return GET_BIT(PINC_REG,Pin); break;
 5d6:	e3 e3       	ldi	r30, 0x33	; 51
 5d8:	f0 e0       	ldi	r31, 0x00	; 0
 5da:	80 81       	ld	r24, Z
 5dc:	28 2f       	mov	r18, r24
 5de:	30 e0       	ldi	r19, 0x00	; 0
 5e0:	8a 81       	ldd	r24, Y+2	; 0x02
 5e2:	88 2f       	mov	r24, r24
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	a9 01       	movw	r20, r18
 5e8:	02 c0       	rjmp	.+4      	; 0x5ee <DIO_u8GetPinValue+0xb6>
 5ea:	55 95       	asr	r21
 5ec:	47 95       	ror	r20
 5ee:	8a 95       	dec	r24
 5f0:	e2 f7       	brpl	.-8      	; 0x5ea <DIO_u8GetPinValue+0xb2>
 5f2:	ca 01       	movw	r24, r20
 5f4:	58 2f       	mov	r21, r24
 5f6:	51 70       	andi	r21, 0x01	; 1
 5f8:	5b 83       	std	Y+3, r21	; 0x03
 5fa:	14 c0       	rjmp	.+40     	; 0x624 <DIO_u8GetPinValue+0xec>
		case PORTD: return GET_BIT(PIND_REG,Pin); break;
 5fc:	e0 e3       	ldi	r30, 0x30	; 48
 5fe:	f0 e0       	ldi	r31, 0x00	; 0
 600:	80 81       	ld	r24, Z
 602:	28 2f       	mov	r18, r24
 604:	30 e0       	ldi	r19, 0x00	; 0
 606:	8a 81       	ldd	r24, Y+2	; 0x02
 608:	88 2f       	mov	r24, r24
 60a:	90 e0       	ldi	r25, 0x00	; 0
 60c:	a9 01       	movw	r20, r18
 60e:	02 c0       	rjmp	.+4      	; 0x614 <DIO_u8GetPinValue+0xdc>
 610:	55 95       	asr	r21
 612:	47 95       	ror	r20
 614:	8a 95       	dec	r24
 616:	e2 f7       	brpl	.-8      	; 0x610 <DIO_u8GetPinValue+0xd8>
 618:	ca 01       	movw	r24, r20
 61a:	58 2f       	mov	r21, r24
 61c:	51 70       	andi	r21, 0x01	; 1
 61e:	5b 83       	std	Y+3, r21	; 0x03
 620:	01 c0       	rjmp	.+2      	; 0x624 <DIO_u8GetPinValue+0xec>
 622:	02 c0       	rjmp	.+4      	; 0x628 <DIO_u8GetPinValue+0xf0>
	}
}
 624:	8b 81       	ldd	r24, Y+3	; 0x03
 626:	8e 83       	std	Y+6, r24	; 0x06
 628:	8e 81       	ldd	r24, Y+6	; 0x06
 62a:	26 96       	adiw	r28, 0x06	; 6
 62c:	0f b6       	in	r0, 0x3f	; 63
 62e:	f8 94       	cli
 630:	de bf       	out	0x3e, r29	; 62
 632:	0f be       	out	0x3f, r0	; 63
 634:	cd bf       	out	0x3d, r28	; 61
 636:	cf 91       	pop	r28
 638:	df 91       	pop	r29
 63a:	08 95       	ret

0000063c <main>:
#include "MCAL/DIO/DIO_interface.h"




void main(void){
 63c:	df 93       	push	r29
 63e:	cf 93       	push	r28
 640:	00 d0       	rcall	.+0      	; 0x642 <main+0x6>
 642:	0f 92       	push	r0
 644:	cd b7       	in	r28, 0x3d	; 61
 646:	de b7       	in	r29, 0x3e	; 62
	u8 switch1,switch2,switch3;
	// Init LEDS
	DIO_voidSetPinDirection(PORTA,PIN0,OUTPUT);
 648:	80 e0       	ldi	r24, 0x00	; 0
 64a:	60 e0       	ldi	r22, 0x00	; 0
 64c:	41 e0       	ldi	r20, 0x01	; 1
 64e:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(PORTA,PIN1,OUTPUT);
 652:	80 e0       	ldi	r24, 0x00	; 0
 654:	61 e0       	ldi	r22, 0x01	; 1
 656:	41 e0       	ldi	r20, 0x01	; 1
 658:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_voidSetPinDirection>
	//Init Switches
	DIO_voidSetPinDirection(PORTB,PIN0,INPUT);
 65c:	81 e0       	ldi	r24, 0x01	; 1
 65e:	60 e0       	ldi	r22, 0x00	; 0
 660:	40 e0       	ldi	r20, 0x00	; 0
 662:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(PORTB,PIN1,INPUT);
 666:	81 e0       	ldi	r24, 0x01	; 1
 668:	61 e0       	ldi	r22, 0x01	; 1
 66a:	40 e0       	ldi	r20, 0x00	; 0
 66c:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(PORTB,PIN2,INPUT);
 670:	81 e0       	ldi	r24, 0x01	; 1
 672:	62 e0       	ldi	r22, 0x02	; 2
 674:	40 e0       	ldi	r20, 0x00	; 0
 676:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_voidSetPinDirection>
	//Pull up switches
	DIO_voidSetPinValue(PORTB,PIN0,HIGH);
 67a:	81 e0       	ldi	r24, 0x01	; 1
 67c:	60 e0       	ldi	r22, 0x00	; 0
 67e:	41 e0       	ldi	r20, 0x01	; 1
 680:	0e 94 69 01 	call	0x2d2	; 0x2d2 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORTB,PIN1,HIGH);
 684:	81 e0       	ldi	r24, 0x01	; 1
 686:	61 e0       	ldi	r22, 0x01	; 1
 688:	41 e0       	ldi	r20, 0x01	; 1
 68a:	0e 94 69 01 	call	0x2d2	; 0x2d2 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORTB,PIN2,HIGH);
 68e:	81 e0       	ldi	r24, 0x01	; 1
 690:	62 e0       	ldi	r22, 0x02	; 2
 692:	41 e0       	ldi	r20, 0x01	; 1
 694:	0e 94 69 01 	call	0x2d2	; 0x2d2 <DIO_voidSetPinValue>

	while(1){
		switch1 = DIO_u8GetPinValue(PORTB,PIN0);
 698:	81 e0       	ldi	r24, 0x01	; 1
 69a:	60 e0       	ldi	r22, 0x00	; 0
 69c:	0e 94 9c 02 	call	0x538	; 0x538 <DIO_u8GetPinValue>
 6a0:	8b 83       	std	Y+3, r24	; 0x03
		switch2 = DIO_u8GetPinValue(PORTB,PIN1);
 6a2:	81 e0       	ldi	r24, 0x01	; 1
 6a4:	61 e0       	ldi	r22, 0x01	; 1
 6a6:	0e 94 9c 02 	call	0x538	; 0x538 <DIO_u8GetPinValue>
 6aa:	8a 83       	std	Y+2, r24	; 0x02
		switch3 = DIO_u8GetPinValue(PORTB,PIN2);
 6ac:	81 e0       	ldi	r24, 0x01	; 1
 6ae:	62 e0       	ldi	r22, 0x02	; 2
 6b0:	0e 94 9c 02 	call	0x538	; 0x538 <DIO_u8GetPinValue>
 6b4:	89 83       	std	Y+1, r24	; 0x01
		/////////////////////////Switch1
		if(switch1 == LOW){
 6b6:	8b 81       	ldd	r24, Y+3	; 0x03
 6b8:	88 23       	and	r24, r24
 6ba:	31 f4       	brne	.+12     	; 0x6c8 <main+0x8c>
			DIO_voidSetPinValue(PORTA,PIN0,HIGH);
 6bc:	80 e0       	ldi	r24, 0x00	; 0
 6be:	60 e0       	ldi	r22, 0x00	; 0
 6c0:	41 e0       	ldi	r20, 0x01	; 1
 6c2:	0e 94 69 01 	call	0x2d2	; 0x2d2 <DIO_voidSetPinValue>
 6c6:	08 c0       	rjmp	.+16     	; 0x6d8 <main+0x9c>
		}
		else if(switch1 == HIGH){
 6c8:	8b 81       	ldd	r24, Y+3	; 0x03
 6ca:	81 30       	cpi	r24, 0x01	; 1
 6cc:	29 f4       	brne	.+10     	; 0x6d8 <main+0x9c>
			DIO_voidSetPinValue(PORTA,PIN0,LOW);
 6ce:	80 e0       	ldi	r24, 0x00	; 0
 6d0:	60 e0       	ldi	r22, 0x00	; 0
 6d2:	40 e0       	ldi	r20, 0x00	; 0
 6d4:	0e 94 69 01 	call	0x2d2	; 0x2d2 <DIO_voidSetPinValue>
		}
		/////////////////////////Switch2
		if(switch2 == LOW){
 6d8:	8a 81       	ldd	r24, Y+2	; 0x02
 6da:	88 23       	and	r24, r24
 6dc:	31 f4       	brne	.+12     	; 0x6ea <main+0xae>
			DIO_voidSetPinValue(PORTA,PIN1,HIGH);
 6de:	80 e0       	ldi	r24, 0x00	; 0
 6e0:	61 e0       	ldi	r22, 0x01	; 1
 6e2:	41 e0       	ldi	r20, 0x01	; 1
 6e4:	0e 94 69 01 	call	0x2d2	; 0x2d2 <DIO_voidSetPinValue>
 6e8:	08 c0       	rjmp	.+16     	; 0x6fa <main+0xbe>
		}
		else if(switch2 == HIGH){
 6ea:	8a 81       	ldd	r24, Y+2	; 0x02
 6ec:	81 30       	cpi	r24, 0x01	; 1
 6ee:	29 f4       	brne	.+10     	; 0x6fa <main+0xbe>
			DIO_voidSetPinValue(PORTA,PIN1,LOW);
 6f0:	80 e0       	ldi	r24, 0x00	; 0
 6f2:	61 e0       	ldi	r22, 0x01	; 1
 6f4:	40 e0       	ldi	r20, 0x00	; 0
 6f6:	0e 94 69 01 	call	0x2d2	; 0x2d2 <DIO_voidSetPinValue>
		}
		////////////////////////Switch3
		if(switch3 == LOW){
 6fa:	89 81       	ldd	r24, Y+1	; 0x01
 6fc:	88 23       	and	r24, r24
 6fe:	61 f6       	brne	.-104    	; 0x698 <main+0x5c>
			DIO_voidSetPinValue(PORTA,PIN0,HIGH);
 700:	80 e0       	ldi	r24, 0x00	; 0
 702:	60 e0       	ldi	r22, 0x00	; 0
 704:	41 e0       	ldi	r20, 0x01	; 1
 706:	0e 94 69 01 	call	0x2d2	; 0x2d2 <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORTA,PIN1,HIGH);
 70a:	80 e0       	ldi	r24, 0x00	; 0
 70c:	61 e0       	ldi	r22, 0x01	; 1
 70e:	41 e0       	ldi	r20, 0x01	; 1
 710:	0e 94 69 01 	call	0x2d2	; 0x2d2 <DIO_voidSetPinValue>
 714:	c1 cf       	rjmp	.-126    	; 0x698 <main+0x5c>

00000716 <_exit>:
 716:	f8 94       	cli

00000718 <__stop_program>:
 718:	ff cf       	rjmp	.-2      	; 0x718 <__stop_program>
